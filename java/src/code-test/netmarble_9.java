//문제 설명
//        철수는 XX항공사를 이용해 여행을 떠나려 합니다. XX항공사가 운행하는 공항은 총 n개이며, 각 공항에는 1부터 n까지 번호가 붙어 있습니다. 또, 비행기들은 서로 다른 두 공항 사이를 왕복해서 운항하며, 두 공항 사이를 이동할 때는 일정 시간이 소요됩니다.
//
//        철수는 1번 공항에서 출발해 k번 공항까지 이동해야 하는데, k번 공항으로 바로 갈 수 없다면, 다른 공항을 경유해서 이동해야 합니다.
//
//        XX항공사는 비행기를 이용할 경우, 이용한 항로에 따라 마일리지를 적립해 주는 제도를 운영하고 있습니다. 따라서 같은 목적지로 이동한다고 하더라도, 어떤 경로를 선택하느냐에 따라 더 많은 마일리지를 적립할 수도 있습니다.
//
//        철수는 물론, k번 공항까지 최대한 빨리 이동하고 싶기 때문에, 가능한 짧은 시간이 소요되는 경로를 선택하려 합니다. 그런데, 그런 경로가 여러 가지 일 경우에는 최대한 많은 마일리지를 적립하고 싶습니다.
//
//        다음은 항공사가 운행하는 공항 개수 n = 5, 목적지 k = 4인 예시입니다.
//
//        mileage_1.png
//
//        위 그림에서 원에 적힌 숫자는 공항 번호를 나타내며, 각 선분은 항로를 나타냅니다. 또, 선분에 적힌 숫자는 이동 시간 / 적립 마일리지를 나타냅니다. 예를 들어 1번 공항에서 2번 공항으로 이동할 때는 4시간이 걸리며, 3 마일리지가 적립됩니다.
//
//        위 예시에서 1번 공항에서 출발해 4번 공항으로 가는 가장 빠른 경로는 아래와 같이 2가지입니다.
//
//        1번 → 3번 → 4번
//        1번 → 5번 → 2번 → 4번
//        두 방법 모두 이동에 5시간이 걸리지만, 첫 번째 방법은 4 마일리지가 적립되며, 두 번째 방법은 5 마일리지가 적립됩니다.
//
//        따라서 1번 공항에서 출발해 4번 공항까지 가는데 걸리는 최단 시간은 5이며, 이때 쌓을 수 있는 최대 마일리지는 5가 됩니다.
//
//        항공기가 운항하는 공항 개수 n, 목적지 공항 번호 k, 각 항로의 정보를 담은 2차원 배열 paths가 매개변수로 주어질 때, 1번 공항에서 출발해 k번 공항으로 가는데 걸리는 최단 시간과 그때 적립할 수 있는 최대 마일리지를 순서대로 배열에 담아 return 하도록 solution 함수를 완성해주세요.
//
//        제한사항
//        n은 2 이상 1,000 이하인 자연수입니다.
//        k는 2 이상 n 이하인 자연수입니다.
//        paths의 세로(행)길이는 1 이상 10,000 이하입니다.
//        paths의 각 행은 [a, b, c, d] 형태입니다.
//        a, b(1 ≤ a, b ≤ n, a != b)이며 이는 a 공항과 b 공항을 잇는 항로가 있다는 뜻입니다.
//        c(1 ≤ c ≤ 1,000, c는 자연수)는 두 공항사이를 이동하는데 걸리는 시간입니다.
//        d(1 ≤ c ≤ 1,000, d는 자연수)는 두 공항사이를 이동할 때 적립되는 마일리지입니다.
//        서로 다른 두 공항 사이를 직접 운항하는 노선은 정확히 1개입니다.
//        같은 운항 노선 정보가 중복해서 주어지지 않습니다.
//        임의의 두 공항간에 항상 이동 가능한 경로가 존재합니다.
//        return 하는 배열은 [최단 시간, 최대 마일리지] 순서여야 합니다.
//        입출력 예
//        n	k	paths	result
//        5	4	[[1,5,1,1],[1,2,4,3],[1,3,3,2],[2,5,2,1],[2,4,2,3],[3,4,2,2]]	[5,5]
//        입출력 예 설명
//        입출력 예 #1
//
//        문제 예시와 같습니다.

public class netmarble_9 {
}
